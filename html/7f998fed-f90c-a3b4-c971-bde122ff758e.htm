<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>OpenVinoSharp.preprocess Namespace</title>
    <meta name="Title" content="OpenVinoSharp.preprocess" />
    <meta name="Help.Id" content="N:OpenVinoSharp.preprocess" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="OpenVinoSharp.preprocess" />
    <meta name="guid" content="7f998fed-f90c-a3b4-c971-bde122ff758e" />
    <meta name="Description" content="Mainly defined the data processing methods in OpenVINO. OpenVinoSharp.preprocess." />
    <meta name="tocFile" content="../toc/IDA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">OpenVINO C# API Documented</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">Please use. NET 5,. NET 6, NET 7,. NET 8, NET Framework 4.6, NET Framework 4.61, NET Framework 4.7, NET Framework 4.72, NET Framework 4.8, NET Framework 4.81, and. NET Core 3.1 versions</span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Open<wbr />Vino<wbr />Sharp.<wbr />preprocess Namespace</h1>
            <div class="summary">
            Mainly defined the data processing methods in OpenVINO.
            <span class="code">OpenVinoSharp.preprocess</span>.
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Classes</h2>
            <div id="IDCCASection">
              <table id="classList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="85ce42c6-7332-baa3-213d-edecd32126bb.htm">InputInfo</a>
                  </td>
                  <td>
             Class holding preprocessing information for one input
             From preprocessing pipeline perspective, each input can be represented as:
               - User's input parameter info (InputInfo::tensor)
               - Preprocessing steps applied to user's input (InputInfo::preprocess)
               - Model's input info, which is a final input's info after preprocessing (InputInfo::model)
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="09d7f62b-e705-0ed8-85db-b367105cd922.htm">InputModelInfo</a>
                  </td>
                  <td>
            Information about model's input tensor. If all information is already included to loaded model, this info
            may not be needed. However it can be set to specify additional information about model, like 'layout'.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="b81f02c7-8242-9e53-4118-7e68a21cf06f.htm">InputTensorInfo</a>
                  </td>
                  <td>
            Information about user's input tensor. By default, it will be initialized to same data (type/shape/etc) as
            model's input parameter. User application can override particular parameters (like 'element_type') according to
            application's data and specify appropriate conversions in pre-processing steps
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="779e6e4d-cc20-ec52-0a95-9a1d0702790a.htm">OutputInfo</a>
                  </td>
                  <td>
            Class holding postprocessing information for one output
            From postprocessing pipeline perspective, each output can be represented as:
               - Model's output info,  (OutputInfo::model)
               - Postprocessing steps applied to user's input (OutputInfo::postprocess)
               - User's desired output parameter information, which is a final one after preprocessing (OutputInfo::tensor)
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="d629659b-a2ff-0a7b-78b1-8e3bf270d6a5.htm">OutputTensorInfo</a>
                  </td>
                  <td>
            Information about user's desired output tensor. By default, it will be initialized to same data
            (type/shape/etc) as model's output parameter. User application can override particular parameters (like
            'element_type') according to application's data and specify appropriate conversions in post-processing steps
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="bda3f1dd-d27e-9ddd-47fb-641b88d9b52b.htm">PrePostProcessor</a>
                  </td>
                  <td>
             Main class for adding pre- and post- processing steps to existing ov::Model
             </td>
                </tr>
                <tr>
                  <td>
                    <a href="45a14f41-866d-1909-ef44-e458789f7dab.htm">PreProcessSteps</a>
                  </td>
                  <td>
            Preprocessing steps. Each step typically intends adding of some operation to input parameter
            User application can specify sequence of preprocessing steps in a builder-like manner
            </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Enumerations</h2>
            <div id="IDACASection">
              <table id="enumerationList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="c968bc19-280e-dda3-45a9-61bfa54be825.htm">ColorFormat</a>
                  </td>
                  <td>
            This enum contains enumerations for color format.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="efc2e6e8-147d-0805-ba89-cf5e9d8b78b2.htm">ResizeAlgorithm</a>
                  </td>
                  <td>
            This enum contains codes for all preprocess resize algorithm.
            </td>
                </tr>
              </table>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Classes</a>
                </li>
                <li>
                  <a class="quickLink">Enumerations</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">Copyright © 2024 Yan Guojin OpenVINO C# API. All rights reserved.<p><a href="https://github.com/guojin-yan/OpenVINO-CSharp-API" target="_blank" rel="noopener noreferrer">Copyright © 2024 Yan Guojin OpenVINO C# API. All rights reserved.</a></p> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script>
  </body>
</html>